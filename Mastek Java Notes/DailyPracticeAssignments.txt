Assignment 1 : 
1. Create a projet assign01 
	Main.java -> Create object of Book Class where Book (id,bookName,authorName)
2. Create a projet assign02 
	Main.java -> Create object of Student Class where Student (id,studentName,courseName)
3. Create a projet assign03 
	Main.java -> Create object of Product Class where Product (id,pid,productName,unitPrice)
	
In all above assignment :
1. Creting 2 object of given class
2. override the toString() alt+s+s
3. logic for public methods -> getter/setter for instance variables for each model class	
4. ensure that you are having default and overloaded constructor for each class

29Feb24 Assignment 1 : 
1. Create Assignment assign04 Book
2. Create Assignment assign05 Student
3. Create Assignment assign06 Product

In all above project implement below
1. Static counter for each class 
2. static and non static block to initialse and increment the static and id value 
3. Test your understanding by creating minimu 3 object using overloaded constructor without id 

01Mar24 Assignment03 :
Create a file 01Mar24_Assignment03_<162333>.docx
Questions and Exercises: Variables
https://docs.oracle.com/javase/tutorial/java/nutsandbolts/QandE/questions_variables.html
Questions and Exercises: Operators
https://docs.oracle.com/javase/tutorial/java/nutsandbolts/QandE/questions_operators.html
Questions and Exercises: Expressions, Statements, and Blocks
https://docs.oracle.com/javase/tutorial/java/nutsandbolts/QandE/questions_expressions.html
Questions and Exercises: Control Flow Statements
https://docs.oracle.com/javase/tutorial/java/nutsandbolts/QandE/questions_flow.html


#### Read: 02Mar24 Assignment04  :
Lesson: Classes and Objects
https://docs.oracle.com/javase/tutorial/java/javaOO/index.html

#### Practice: 02Mar24_Assignment04:

#### Please note 
1. create an assign09 project where under com.training.demo. Ensure that all below solutions are created only in this project
2. Assignmentshould be uploaded as "02Mar24_Assignment04<162333>.docx" where you will copy below questions and paste is solution below it
3. For user input use String []args i.e. Program arguments

#### Variables

01. Declare variables of different primitive data types (int, double, char, boolean) and assign appropriate values to them. Print the values of these variables.
02. Write a program to swap the values of two integer variables without using a temporary variable.
03. Create an array of strings to store the names of your favorite movies. Access and print the second element in the array.
04. Initialize a variable with a value and use the += operator to add 5 to it. Print the result.
05. Declare two variables and check if they are of the same data type using the instanceof operator.

#### Operators

01. *Write a program to calculate the area and perimeter of a rectangle given its length and width using arithmetic operators (+, -, , /).
02. Demonstrate the use of relational operators (<, >, <=, >=, ==, !=) to compare two numbers and print the corresponding result.
03. Use logical operators (&&, ||, !) to check if a number is even or odd and print the appropriate message.
04. Illustrate the bitwise operators (&, |, ^, ~, <<, >>, >>>) on two integers and print the results.
05. *Apply the assignment operator (=) and its variations (+=, -=, =, /=, %=, <<=, >>=, >>>=) to modify a variable's value and print the result.

#### Control Statements

01. Write a program to accept a grade as input from the user and print the corresponding letter grade (A, B, C, D, F) using an if-else if-else chain.
02. Create a program that uses a switch statement to check the day of the week (1-7) entered by the user and print the corresponding day name.
03. Simulate a simple ATM program using a loop that allows the user to withdraw money (within their account limit) until they choose to exit.
04. Develop a program to calculate the factorial of a non-negative number entered by the user using a loop (e.g., for, while). 
05. Write a program that prints the first 10 even numbers using a loop and the % operator to check for evenness.

#### Looping Statements

01. Print the numbers from 1 to 10 in reverse order using a for loop.
02. Create a program that displays the first 15 Fibonacci numbers using a while loop.
03. Write a program that allows the user to enter numbers until they enter a negative number, and then print the sum of all the positive numbers entered.
04. Develop a program that prints a triangle of numbers in ascending order, with the number of rows entered by the user.
05. Simulate a guessing game where the user has to guess a randomly generated number (between 1 and 100) within a limited number of attempts.

#### Branch Statements

01. Write a program that uses a break statement to exit a loop when the user enters the letter 'q'.
02. Create a program that uses a continue statement to skip even numbers when printing the numbers from 1 to 10 in a loop.
03. Develop a program that checks if a number entered by the user is prime using a loop and a break statement to exit once primality is determined.
04. Implement a program that calculates the simple interest based on principal, rate, and time using a nested if statement to check for valid input.
05. Create a program that displays a different message based on the user's age using a series of if statements or a switch statement.

##################################################
04Mar24 Assignment05 : Please make sure you have implemented below codes before tomorrow's session
##################################################
1. Array
2. infinite while
3. finite for 
4. switch 
5. creation of objects

1. Create Assignment assign07 Book
	1. Create an Array of bookList by accepting no. books from user
	2. Create a logic to accept each book details and store it in bookList array
	3. Display the book details by accepting bookNo from the user

2. Create Assignment assign08 Student
	1. Create an Array of studentList by accepting no. studetns from user
	2. Create a logic to accept each Student details and store it in studentList array
	3. Display the student details by accepting studentNo from the user
3. Create Assignment assign09 Product
	1. Create an Array of productList by accepting no. products from user
	2. Create a logic to accept each product details and store it in productList array
	3. Display the product details by accepting pid from the user

##################################################
1. create Assignment assign10
   Creat com.training.demo.model.Greeting.java which has greet() method which returns default msg 
   There are EnglishGreeting, GujaratiGreeting,GermanGreeting classes inheriting from
   Greeting class which overrides greet() method .
   **Please note Greeting.java has message as private data member which is return
   when greet() is called i.e.this.message="Hello World"
   

##################################################
8Mar24 Assignment_Collection_1 : 
Implement below in a proejct : 
Exercise: Consider the four core interfaces, Set, List, Queue, and Map. For each of the following four assignments, specify which of the four core interfaces is best-suited, and explain how to use it to implement the assignment.
Answers:
Whimsical Toys Inc (WTI) needs to record the names of all its employees. Every month, an employee will be chosen at random from these records to receive a free toy.
Use a List. Choose a random employee by picking a number between 0 and size()-1.
WTI has decided that each new product will be named after an employee â€” but only first names will be used, and each name will be used only once. Prepare a list of unique first names.
Use a Set. Collections that implement this interface don't allow the same element to be entered more than once.
WTI decides that it only wants to use the most popular names for its toys. Count up the number of employees who have each first name.
Use a Map, where the keys are first names, and each value is a count of the number of employees with that first name.
WTI acquires season tickets for the local lacrosse team, to be shared by employees. Create a waiting list for this popular sport.
Use a Queue. Invoke add() to add employees to the waiting list, and remove() to remove them.
##################################################